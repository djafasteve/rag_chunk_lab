# ==============================================================================
# RAG Chunk Lab - Configuration Environment
# ==============================================================================
# Copiez ce fichier vers .env et remplissez vos valeurs
# cp .env.example .env

# ==============================================================================
# AZURE OPENAI CONFIGURATION
# ==============================================================================
# Requis pour utiliser Azure OpenAI avec --use-llm et --ragas
# Obtenez ces valeurs depuis votre ressource Azure OpenAI

AZURE_OPENAI_API_KEY=your_api_key_here
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com
AZURE_OPENAI_DEPLOYMENT=gpt-4o-mini
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# Modèle d'embedding pour RAGAS (optionnel)
AZURE_OPENAI_EMBEDDING=text-embedding-3-small

# ==============================================================================
# RAG CHUNK LAB CONFIGURATION
# ==============================================================================
# Dossier pour stocker les données et indexes (optionnel)
# Par défaut: ./data
RAG_LAB_DATA=data

# ==============================================================================
# OLLAMA CONFIGURATION (pour génération de ground truth)
# ==============================================================================
# URL du serveur Ollama local (optionnel)
# Par défaut: http://localhost:11434
OLLAMA_URL=http://localhost:11434

# Modèle Ollama par défaut (optionnel)
# Par défaut: mistral:7b
OLLAMA_DEFAULT_MODEL=mistral:7b

# ==============================================================================
# CHUNKING PARAMETERS (optionnel - surcharge config.py)
# ==============================================================================
# Taille des chunks fixes en tokens
# CHUNK_SIZE_TOKENS=500

# Overlap entre chunks en tokens
# CHUNK_OVERLAP_TOKENS=80

# Taille fenêtre sliding window
# SLIDING_WINDOW_SIZE=400

# Stride pour sliding window
# SLIDING_STRIDE=200

# Nombre de candidats à récupérer
# TOP_K_CANDIDATES=6

# ==============================================================================
# API CONFIGURATION
# ==============================================================================
# Port pour l'API FastAPI (optionnel)
# API_PORT=8000

# Host pour l'API FastAPI (optionnel)
# API_HOST=0.0.0.0

# ==============================================================================
# DEVELOPMENT / DEBUG
# ==============================================================================
# Niveau de log (DEBUG, INFO, WARNING, ERROR)
# LOG_LEVEL=INFO

# Activer les logs détaillés pour RAGAS
# RAGAS_VERBOSE=false

# Sauvegarder les prompts de génération (debug)
# SAVE_PROMPTS=false